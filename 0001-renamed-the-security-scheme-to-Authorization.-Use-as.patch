From 310439851b2f4f3451d543e8c8a9a6d7b8adda33 Mon Sep 17 00:00:00 2001
From: Erwin <erwin.devries@inholland.nl>
Date: Thu, 17 Jun 2021 09:43:51 +0200
Subject: [PATCH] renamed the security scheme to Authorization. Use as follows:
 "Bearer <your token here>" in the Authorize button on Swagger UI.

---
 src/main/java/io/swagger/api/AccountsApi.java      | 14 +++++++-------
 src/main/java/io/swagger/api/LoginApi.java         |  2 +-
 src/main/java/io/swagger/api/LogoutApi.java        |  2 +-
 src/main/java/io/swagger/api/TransactionsApi.java  |  4 ++--
 src/main/java/io/swagger/api/UsersApi.java         | 10 +++++-----
 .../configuration/SwaggerDocumentationConfig.java  |  4 ++--
 6 files changed, 18 insertions(+), 18 deletions(-)

diff --git a/src/main/java/io/swagger/api/AccountsApi.java b/src/main/java/io/swagger/api/AccountsApi.java
index b794647..c25b168 100644
--- a/src/main/java/io/swagger/api/AccountsApi.java
+++ b/src/main/java/io/swagger/api/AccountsApi.java
@@ -41,7 +41,7 @@ import java.util.Map;
 public interface AccountsApi {
 
     @Operation(summary = "Close an account", description = "Can only be done by employee", security = {
-        @SecurityRequirement(name = "bearerAuth")    }, tags={ "Account" })
+        @SecurityRequirement(name = "Authorization")    }, tags={ "Account" })
     @ApiResponses(value = { 
         @ApiResponse(responseCode = "200", description = "successful operation"),
         
@@ -54,7 +54,7 @@ public interface AccountsApi {
 
 
     @Operation(summary = "Create an account", description = "Can only be done by user", security = {
-        @SecurityRequirement(name = "bearerAuth")    }, tags={ "Account" })
+        @SecurityRequirement(name = "Authorization")    }, tags={ "Account" })
     @ApiResponses(value = { 
         @ApiResponse(responseCode = "200", description = "successful operation", content = @Content(schema = @Schema(implementation = ReturnAccount.class))),
         
@@ -69,7 +69,7 @@ public interface AccountsApi {
 
 
     @Operation(summary = "Depositing money to an account using IBAN", description = "Depositing money into a customer account", security = {
-        @SecurityRequirement(name = "bearerAuth")    }, tags={ "Account" })
+        @SecurityRequirement(name = "Authorization")    }, tags={ "Account" })
     @ApiResponses(value = { 
         @ApiResponse(responseCode = "200", description = "Money has been deposited", content = @Content(schema = @Schema(implementation = Deposit.class))),
         
@@ -83,7 +83,7 @@ public interface AccountsApi {
 
 
     @Operation(summary = "Get specific account by iban", description = "Return an account by iban", security = {
-        @SecurityRequirement(name = "bearerAuth")    }, tags={ "Account" })
+        @SecurityRequirement(name = "Authorization")    }, tags={ "Account" })
     @ApiResponses(value = { 
         @ApiResponse(responseCode = "200", description = "successful operation", content = @Content(schema = @Schema(implementation = Account.class))),
         
@@ -95,7 +95,7 @@ public interface AccountsApi {
 
 
     @Operation(summary = "Get all customer accounts", description = "Return a list of customer accounts", security = {
-        @SecurityRequirement(name = "bearerAuth")    }, tags={ "Account" })
+        @SecurityRequirement(name = "Authorization")    }, tags={ "Account" })
     @ApiResponses(value = { 
         @ApiResponse(responseCode = "200", description = "successful operation", content = @Content(array = @ArraySchema(schema = @Schema(implementation = Account.class)))),
         
@@ -110,7 +110,7 @@ public interface AccountsApi {
 
 
     @Operation(summary = "Get balance of an account using IBAN", description = "Get balance of account using IBAN", security = {
-        @SecurityRequirement(name = "bearerAuth")    }, tags={ "Account" })
+        @SecurityRequirement(name = "Authorization")    }, tags={ "Account" })
     @ApiResponses(value = { 
         @ApiResponse(responseCode = "200", description = "Balance is showed", content = @Content(schema = @Schema(implementation = ReturnBalance.class))) })
     @RequestMapping(value = "/Accounts/{IBAN}/balance",
@@ -120,7 +120,7 @@ public interface AccountsApi {
 
 
     @Operation(summary = "Withdraw from an account using IBAN", description = "Customers withdraw money from their accounts", security = {
-        @SecurityRequirement(name = "bearerAuth")    }, tags={ "Account" })
+        @SecurityRequirement(name = "Authorization")    }, tags={ "Account" })
     @ApiResponses(value = { 
         @ApiResponse(responseCode = "200", description = "Money has been withdrawn", content = @Content(schema = @Schema(implementation = Withdrawal.class))),
         
diff --git a/src/main/java/io/swagger/api/LoginApi.java b/src/main/java/io/swagger/api/LoginApi.java
index 220ec8f..d784273 100644
--- a/src/main/java/io/swagger/api/LoginApi.java
+++ b/src/main/java/io/swagger/api/LoginApi.java
@@ -38,7 +38,7 @@ import java.util.Map;
 public interface LoginApi {
 
     @Operation(summary = "Log into the banking system", description = "This can only be done if you are a employee or customer", security = {
-        @SecurityRequirement(name = "bearerAuth")    }, tags={ "User" })
+        @SecurityRequirement(name = "Authorization")    }, tags={ "User" })
     @ApiResponses(value = { 
         @ApiResponse(responseCode = "200", description = "successful operation", content = @Content(schema = @Schema(implementation = LoggedIn.class))),
         
diff --git a/src/main/java/io/swagger/api/LogoutApi.java b/src/main/java/io/swagger/api/LogoutApi.java
index e2a5aa8..fbea48c 100644
--- a/src/main/java/io/swagger/api/LogoutApi.java
+++ b/src/main/java/io/swagger/api/LogoutApi.java
@@ -36,7 +36,7 @@ import java.util.Map;
 public interface LogoutApi {
 
     @Operation(summary = "Log out of the system", description = "This can only be accessed if you are logged in", security = {
-        @SecurityRequirement(name = "bearerAuth")    }, tags={ "User" })
+        @SecurityRequirement(name = "Authorization")    }, tags={ "User" })
     @ApiResponses(value = { 
         @ApiResponse(responseCode = "200", description = "successful operation") })
     @RequestMapping(value = "/Logout",
diff --git a/src/main/java/io/swagger/api/TransactionsApi.java b/src/main/java/io/swagger/api/TransactionsApi.java
index 459aa3a..cadbabb 100644
--- a/src/main/java/io/swagger/api/TransactionsApi.java
+++ b/src/main/java/io/swagger/api/TransactionsApi.java
@@ -38,7 +38,7 @@ import java.util.Map;
 public interface TransactionsApi {
 
     @Operation(summary = "Getting all transactions of a specific IBAN", description = "Get transaction information of a specific IBAN", security = {
-        @SecurityRequirement(name = "bearerAuth")    }, tags={ "Transactions" })
+        @SecurityRequirement(name = "Authorization")    }, tags={ "Transactions" })
     @ApiResponses(value = { 
         @ApiResponse(responseCode = "200", description = "OK", content = @Content(schema = @Schema(implementation = Transaction.class))),
         
@@ -53,7 +53,7 @@ public interface TransactionsApi {
 
 
     @Operation(summary = "Making a new transaction", description = "Making a new transaction using an IBAN", security = {
-        @SecurityRequirement(name = "bearerAuth")    }, tags={ "Transactions" })
+        @SecurityRequirement(name = "Authorization")    }, tags={ "Transactions" })
     @ApiResponses(value = { 
         @ApiResponse(responseCode = "200", description = "OK"),
         
diff --git a/src/main/java/io/swagger/api/UsersApi.java b/src/main/java/io/swagger/api/UsersApi.java
index 21cab93..498e084 100644
--- a/src/main/java/io/swagger/api/UsersApi.java
+++ b/src/main/java/io/swagger/api/UsersApi.java
@@ -39,7 +39,7 @@ import java.util.Map;
 public interface UsersApi {
 
     @Operation(summary = "Create User", description = "This can be done by a new customer", security = {
-        @SecurityRequirement(name = "bearerAuth")    }, tags={ "Employee" })
+        @SecurityRequirement(name = "Authorization")    }, tags={ "Employee" })
     @ApiResponses(value = { 
         @ApiResponse(responseCode = "201", description = "user created", content = @Content(schema = @Schema(implementation = User.class))) })
     @RequestMapping(value = "/Users",
@@ -50,7 +50,7 @@ public interface UsersApi {
 
 
     @Operation(summary = "Delete User Info", description = "Deleting customer information using the id", security = {
-        @SecurityRequirement(name = "bearerAuth")    }, tags={ "Employee" })
+        @SecurityRequirement(name = "Authorization")    }, tags={ "Employee" })
     @ApiResponses(value = { 
         @ApiResponse(responseCode = "200", description = "successful operation"),
         
@@ -63,7 +63,7 @@ public interface UsersApi {
 
 
     @Operation(summary = "Edit User Info", description = "Editing specific user information using id", security = {
-        @SecurityRequirement(name = "bearerAuth")    }, tags={ "Employee" })
+        @SecurityRequirement(name = "Authorization")    }, tags={ "Employee" })
     @ApiResponses(value = { 
         @ApiResponse(responseCode = "200", description = "Information changed"),
         
@@ -77,7 +77,7 @@ public interface UsersApi {
 
 
     @Operation(summary = "Get all users", description = "This can be done by Employees", security = {
-        @SecurityRequirement(name = "bearerAuth")    }, tags={ "Employee" })
+        @SecurityRequirement(name = "Authorization")    }, tags={ "Employee" })
     @ApiResponses(value = { 
         @ApiResponse(responseCode = "200", description = "successful operation", content = @Content(array = @ArraySchema(schema = @Schema(implementation = User.class)))) })
     @RequestMapping(value = "/Users",
@@ -88,7 +88,7 @@ public interface UsersApi {
 
 
     @Operation(summary = "Get user by ID", description = "This can be done by Employees", security = {
-        @SecurityRequirement(name = "bearerAuth")    }, tags={ "Employee" })
+        @SecurityRequirement(name = "Authorization")    }, tags={ "Employee" })
     @ApiResponses(value = { 
         @ApiResponse(responseCode = "200", description = "successful operation", content = @Content(schema = @Schema(implementation = User.class))),
         
diff --git a/src/main/java/io/swagger/configuration/SwaggerDocumentationConfig.java b/src/main/java/io/swagger/configuration/SwaggerDocumentationConfig.java
index 30f7b78..3c3c69d 100644
--- a/src/main/java/io/swagger/configuration/SwaggerDocumentationConfig.java
+++ b/src/main/java/io/swagger/configuration/SwaggerDocumentationConfig.java
@@ -67,7 +67,7 @@ public class SwaggerDocumentationConfig {
     }
 
     private ApiKey apiKey(){
-        return new ApiKey("Bearer", "Authorization", "header");
+        return new ApiKey("Authorization", "Authorization", "header");
     }
 
     private SecurityContext securityContext(){
@@ -76,7 +76,7 @@ public class SwaggerDocumentationConfig {
 
     private List<SecurityReference> defaultAuth(){
         AuthorizationScope authorizationScope = new AuthorizationScope("global", "accessEverything");
-        return Arrays.asList(new SecurityReference("Bearer", new AuthorizationScope[] {authorizationScope}));
+        return Arrays.asList(new SecurityReference("Authorization", new AuthorizationScope[] {authorizationScope}));
     }
 
 
-- 
2.26.0.windows.1

